name: run-tests

on: [push, pull_request]
env:
    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    DB_DATABASE: unit_tests
jobs:
    tests:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                php: [7.4]
                laravel: [8.*]
                dependency-version: [prefer-stable]
                include:
                    -   laravel: 8.*
                        testbench: 6.*

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Get git commit data
                uses: rlespinasse/git-commit-data-action@1.1.0

            -   name: Print some git data
                run: |
                    echo "${{ env.GIT_COMMIT_AUTHOR_NAME }}" | head -n1 | cut -d " " -f1
                    echo "Get author info"
                    echo " - ${{ env.GIT_COMMIT_AUTHOR }}"
                    echo " - ${{ env.GIT_COMMIT_AUTHOR_NAME }}"
                    echo " - ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}"
                    echo "Get committer info"
                    echo " - ${{ env.GIT_COMMIT_COMMITTER }}"
                    echo " - ${{ env.GIT_COMMIT_COMMITTER_NAME }}"
                    echo " - ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
                    echo "Get message info"
                    echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}"
                    echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED }}"
                    echo " - ${{ env.GIT_COMMIT_MESSAGE_BODY }}"

            -   name: Set up MySQL
                run: |
                    sudo /etc/init.d/mysql start
                    mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -uroot -proot

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: curl, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, iconv
                    coverage: none

            -   name: Install dependencies
                run: |
                    composer config --global --auth http-basic.repo.packagist.com egbertwietses ${{secrets.DAALDER}}
                    composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                    composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

            -   name: Setup Problem Matches
                run: |
                    echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                    echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Execute tests
                run: vendor/bin/phpunit

            -   name: Post status to Slack
                uses: 8398a7/action-slack@v3
                with:
                    status: ${{ job.status }}
                    author_name: "${{ env.GIT_COMMIT_AUTHOR_NAME }}"
                    fields: repo,commit,message
                    mention: "${{ AUTHOR_FIRSTNAME }}"
                    if_mention: failure,cancelled
                env:
                    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                    AUTHOR_FIRSTNAME: echo "${{ env.GIT_COMMIT_AUTHOR_NAME }}" | head -n1 | cut -d " " -f1
                if: always() # Pick up events even if the job fails or is canceled.
